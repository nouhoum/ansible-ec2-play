#!/bin/bash

function help {
  echo "Return the IP address, domain name or status of the given EC2 instanceIDs"
  echo -e "\nUsage: $(basename $0) [options] instanceIds\n"
  echo "Where:"
  echo "  instanceIds are a space-delimited list of zero or more EC2 instance IDs"
  echo "              If an empty list is provided then there is no output and no error."
  echo "              Nonexistant instanceIDs are quietly ignored."
  echo "  options are:"
  echo "    -a  Return all available information"
  echo "    -e  Return server description"
  echo "    -h  Display help"
  echo "    -i  Return IP address (no output if the instance is stopped). This is the default"
  echo "    -n  Return DNS name (no output if the instance is stopped)"
  echo "    -s  Return status (running or stopped)"
  echo "    -x  Debug mode"
  exit -1
}

if [ -z "$ANSIBLE_DATA_DIR" ]; then ANSIBLE_DATA_DIR=data; fi
DATA_FILE=$ANSIBLE_DATA_DIR/settings

function GET_INFO {
  if [ "$1" == STATUS ]; then
    ec2Status $2
  elif [ "$1" == DESCRIPTION ]; then
    cat "$DATA_FILE" | jq ".| map(select(.instanceId == \"$2\").description)[0]"
  else
    echo "$XML" | grep "$1" | cut -d'"' -f4
  fi
}

if [ $# -eq 0 ]; then exit 0; fi

NONE=true
while getopts "aehinsx?" opt; do
  case $opt in
    a) ALL=true
       DESCRIPTION=true
       IP_ADDR=true
       DNS_NAME=true
       STATUS=true
       unset NONE
       ;;

    e) DESCRIPTION=true; unset NONE ;;
    i) IP_ADDR=true;     unset NONE ;;
    n) DNS_NAME=true;    unset NONE ;;
    s) STATUS=true;      unset NONE ;;
    x) DEBUG=true                   ;;
    *) help                         ;;
  esac
done
shift $(($OPTIND-1))

for I in $@; do
  XML=`aws ec2 describe-instances --instance-ids $I`
  if [ "$DEBUG" ]; then set -xv; fi

  if [ "$ALL" ] || [ "$NONE" ]; then
    R="$I"
    SPACE=" "
  fi

  if [ "$IP_ADDR" ]; then
    X="$(GET_INFO PublicIpAddress)"
    if [ "$X" ]; then
      R="$R$SPACE$X"
      SPACE=" "
    fi
  fi

  if [ "$DNS_NAME" ]; then
    X="$(GET_INFO PublicDnsName)"
    if [ "$X" ]; then
      R="$R$SPACE$X"
      SPACE=" "
    fi
  fi

  if [ "$STATUS" ]; then
    X="$(GET_INFO STATUS $I)"
    if [ "$X" ]; then
      R="$R$SPACE$X"
      SPACE=" "
    fi
  fi

  if [ "$DESCRIPTION" ]; then
    X="$(GET_INFO DESCRIPTION $1)"
    if [ "$X" ]; then
      R="$R$SPACE'$X'"
      SPACE=" "
    fi
  fi

  echo "$R"
done
